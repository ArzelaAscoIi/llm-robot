[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-hexapot"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
keywords = []
authors = [
  { name = "Kristof Herrmann", email = "kristof.herrmann@rwth-aachen.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "PyQt5==5.15.2",
  "Pillow",
  "opencv-python-headless",
  "opencv-contrib-python-headless",
  "numpy",
  "mpu6050-raspberrypi",
]

[project.urls]
Documentation = "https://github.com/unknown/llm-hexapot#readme"
Issues = "https://github.com/unknown/llm-hexapot/issues"
Source = "https://github.com/unknown/llm-hexapot"

[tool.hatch.version]
path = "src/llm_hexapot/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
  "PyQt5==5.15.2",
  "Pillow",
  "opencv-python-headless",
  "opencv-contrib-python-headless",
  "numpy",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = ["- coverage combine", "coverage report"]
cov = ["test-cov", "cov-report"]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/llm_hexapot tests}"

[tool.coverage.run]
source_pkgs = ["llm_hexapot", "tests"]
branch = true
parallel = true
omit = ["src/llm_hexapot/__about__.py"]

[tool.coverage.paths]
llm_hexapot = ["src/llm_hexapot", "*/llm-hexapot/src/llm_hexapot"]
tests = ["tests", "*/llm-hexapot/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.build.targets.wheel.hooks.manylinux]
# This ensures the wheel is compatible with many Linux distributions
implementation = "hatchling.build.hooks.manylinux:manylinux"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs", "/.gitignore"]

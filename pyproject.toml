[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-hexapot"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Kristof Herrmann", email = "kristof.herrmann@rwth-aachen.de" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  "numpy",
  "Pillow",
  "opencv-python-headless",
  "opencv-contrib-python-headless",
  #"PyQt5==5.15.2", # enable just on RPI
  "mpu6050-raspberrypi", # enable just on RPI
  "rpi_ws281x",
  "RPi.GPIO",
  "smbus",
  "gpiozero",
  "lgpio",
  "fastapi",
]

[project.urls]
Documentation = "https://github.com/unknown/llm-hexapot#readme"
Issues = "https://github.com/unknown/llm-hexapot/issues"
Source = "https://github.com/unknown/llm-hexapot"

[tool.hatch.version]
path = "llm_hexapot/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  #"Pillow",
  "opencv-python-headless",
  "opencv-contrib-python-headless",
  "numpy",
  # "PyQt5==5.15.2",# enable just on RPI
]
[tool.hatch.envs.default.scripts]
check = "python -m llm_hexapot.check"
server = "uvicorn llm_hexapot.main:app --host 0.0.0.0 --port 8000 --reload"

[tool.hatch.envs.code-quality]
dependencies = ["black"]
[tool.hatch.envs.code-quality.scripts]
format = "black ."

[[tool.hatch.envs.all.matrix]]
python = ["3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:llm_hexapot tests}"

[tool.coverage.run]
source_pkgs = ["llm_hexapot", "tests"]
branch = true
parallel = true
omit = ["llm_hexapot/__about__.py"]

[tool.coverage.paths]
llm_hexapot = ["llm_hexapot", "*/llm-hexapot"]
tests = ["tests", "*/llm-hexapot/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.hatch.build.targets.wheel.hooks.manylinux]
# This ensures the wheel is compatible with many Linux distributions
implementation = "hatchling.build.hooks.manylinux:manylinux"

[tool.hatch.build.targets.sdist]
exclude = ["/.github", "/docs", "/.gitignore"]


# [tool.pyqt-builder]
# qmake-settings = ["core", "gui", "widgets"]

[tool.black]
line-length = 120
